// <auto-generated />
using AnketaAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AnketaAPI.Migrations
{
    [DbContext(typeof(AppDbConext))]
    [Migration("20240301235646_Init2")]
    partial class Init2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AnketaAPI.Models.CatalogSurvey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CatalogSurvey");
                });

            modelBuilder.Entity("AnketaAPI.Models.CatalogSurveyQuestion", b =>
                {
                    b.Property<int>("CatalogSurveyId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<bool>("Answer")
                        .HasColumnType("bit");

                    b.HasKey("CatalogSurveyId", "QuestionId");

                    b.HasIndex("QuestionId");

                    b.ToTable("CatalogSurveyQuestion");
                });

            modelBuilder.Entity("AnketaAPI.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("AnketaAPI.Models.QuestionAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionAnswer");
                });

            modelBuilder.Entity("AnketaAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("AnketaAPI.Models.UserCatalogSurvery", b =>
                {
                    b.Property<int>("CatalogSurveyId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CatalogSurveyId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCatalogSurvery");
                });

            modelBuilder.Entity("AnketaAPI.Models.CatalogSurveyQuestion", b =>
                {
                    b.HasOne("AnketaAPI.Models.CatalogSurvey", null)
                        .WithMany("CatalogSurveyQuestion")
                        .HasForeignKey("CatalogSurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnketaAPI.Models.Question", null)
                        .WithMany("CatalogSurveyQuestion")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AnketaAPI.Models.QuestionAnswer", b =>
                {
                    b.HasOne("AnketaAPI.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("AnketaAPI.Models.UserCatalogSurvery", b =>
                {
                    b.HasOne("AnketaAPI.Models.CatalogSurvey", "CatalogSurvey")
                        .WithMany()
                        .HasForeignKey("CatalogSurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnketaAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CatalogSurvey");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AnketaAPI.Models.CatalogSurvey", b =>
                {
                    b.Navigation("CatalogSurveyQuestion");
                });

            modelBuilder.Entity("AnketaAPI.Models.Question", b =>
                {
                    b.Navigation("CatalogSurveyQuestion");
                });
#pragma warning restore 612, 618
        }
    }
}
